---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx service
      command: service nginx status

    - name: verify nginx is listening on port 80
      wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: verify apache2 service
      command: service apache2 status

    - name: verify apache2 is listening on port 80
      wait_for: port=80 timeout=1

- hosts: database
  become: true
  tasks:
    - name: verify mysql service
      command: service mysql status

    - name: verify mysql is listening on port 3306
      wait_for: host={{ ansible_eth1.ipv4.address }} port=3306 timeout=1

- hosts: control
  gather_facts: false
  become: true
  tasks:
    - name: verify end to end response
      uri: url=http://{{item}} return_content=yes
      loop: "{{ query('inventory_hostnames', 'loadbalancer') }}"
      register: lb_index

    - fail:
        msg: "index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      loop: "{{lb_index.results}}"

    - name: verify end to end db response
      uri: url=http://{{item}}/db return_content=yes
      loop: "{{ query('inventory_hostnames', 'loadbalancer') }}"
      register: lb_db

    - fail:
        msg: "db failed to return content"
      when: "'Database Connected from' not in item.content"
      loop: "{{lb_db.results}}"

- hosts: loadbalancer
  gather_facts: false
  become: true
  tasks:
    - name: verify end to end response
      uri: url=http://{{item}} return_content=yes
      loop: "{{ query('inventory_hostnames', 'webserver') }}"
      register: app_index

    - fail: 
        msg: "index failed to return content"
#      when: "'Hello, from sunny {{item.item}}!' not in item.content"
      when: "'Hello, from sunny ' ~ item.item ~ '!' not in item.content"
#      with_items: "{{app_index.results}}"
      loop: "{{app_index.results}}"

    - name: verify end to end db response
      uri: url=http://{{item}}/db return_content=yes
      loop: "{{ query('inventory_hostnames', 'webserver') }}"
      register: app_db

    - fail:
        msg: "db failed to return content"
      when: "'Database Connected from' not in item.content"
      loop: "{{app_db.results}}"
